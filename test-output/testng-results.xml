<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="35" started-at="2013-09-22T16:51:05Z" finished-at="2013-09-22T16:51:05Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="35" started-at="2013-09-22T16:51:05Z" finished-at="2013-09-22T16:51:05Z">
      <class name="com.tiborbotos.patterns.OptionTest">
        <test-method status="PASS" signature="testGetOrElse()[pri:0, instance:com.tiborbotos.patterns.OptionTest@781f6226]" name="testGetOrElse" duration-ms="13" started-at="2013-09-22T18:51:05Z" finished-at="2013-09-22T18:51:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrElse -->
        <test-method status="PASS" signature="testGetOrElseWithException()[pri:0, instance:com.tiborbotos.patterns.OptionTest@781f6226]" name="testGetOrElseWithException" duration-ms="1" started-at="2013-09-22T18:51:05Z" finished-at="2013-09-22T18:51:05Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
	at com.tiborbotos.patterns.OptionTest$1.get(OptionTest.java:43)
	at com.tiborbotos.patterns.OptionTest$1.get(OptionTest.java:1)
	at com.tiborbotos.patterns.Option.getOrElse(Option.java:88)
	at com.tiborbotos.patterns.OptionTest.testGetOrElseWithException(OptionTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrElseWithException -->
        <test-method status="PASS" signature="testOptionHasValue()[pri:0, instance:com.tiborbotos.patterns.OptionTest@781f6226]" name="testOptionHasValue" duration-ms="1" started-at="2013-09-22T18:51:05Z" finished-at="2013-09-22T18:51:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionHasValue -->
        <test-method status="PASS" signature="testOptionNoneIsEmpty()[pri:0, instance:com.tiborbotos.patterns.OptionTest@781f6226]" name="testOptionNoneIsEmpty" duration-ms="0" started-at="2013-09-22T18:51:05Z" finished-at="2013-09-22T18:51:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionNoneIsEmpty -->
      </class> <!-- com.tiborbotos.patterns.OptionTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
